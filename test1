import pandas as pd
import numpy as np
import plotly.express as px
from sklearn.mixture import GaussianMixture

# Load the dataset
file_path = 'data_zscore_1.csv'
data = pd.read_csv(file_path)

# Select relevant columns for analysis
columns_to_analyze = ['Access Time', 'cpuTime', 'backgroundTime', 'powerUsage', 'wifiDataUsage']
data_filtered = data[columns_to_analyze].copy()

# Fit a Gaussian Mixture Model (GMM)
gmm = GaussianMixture(n_components=2, random_state=0)
gmm.fit(data_filtered)

# Predict the probabilities and determine anomalies
data_filtered['probability'] = gmm.score_samples(data_filtered)
data_filtered['is_anomaly'] = data_filtered['probability'] < np.percentile(data_filtered['probability'], 5)

# Add the packageName to the dataframe for grouping in the plots
data_filtered['packageName'] = data['packageName']

# Melt the dataframe for easier plotting with Plotly
data_melted = data_filtered.melt(id_vars=['packageName', 'is_anomaly'], var_name='Feature', value_name='Value')

# Create the plot
fig = px.bar(data_melted, x='packageName', y='Value', color='Feature', 
             title='Anomaly Detection using Gaussian Mixtures', 
             labels={'Value': 'Value', 'packageName': 'Package Name'},
             facet_col='Feature', facet_col_wrap=3)

# Highlight anomalies
anomalies = data_melted[data_melted['is_anomaly']]
fig.add_scatter(x=anomalies['packageName'], y=anomalies['Value'], mode='markers', marker=dict(color='red'), 
                name='Anomaly')

# Update x-axis labels rotation
fig.update_layout(xaxis_tickangle=-45)

# Show the plot
fig.show()