public class Activity1 extends AppCompatActivity {
    private SwitchCompat switch1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity1);

        switch1 = findViewById(R.id.switch1);

        // Load saved switch state on startup
        SharedPreferences sharedPreferences = getSharedPreferences("MyPreferences", MODE_PRIVATE);
        boolean switchState = sharedPreferences.getBoolean("service_running", false);
        switch1.setChecked(switchState);

        // Start or stop the service based on switch state
        switch1.setOnCheckedChangeListener((buttonView, isChecked) -> {
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putBoolean("service_running", isChecked);
            editor.apply();

            if (isChecked) {
                startService(new Intent(Activity1.this, MyForegroundService.class));
            } else {
                stopService(new Intent(Activity1.this, MyForegroundService.class));
            }

            // Broadcast the new state so that Activity 2 can update its switch
            Intent broadcastIntent = new Intent("com.example.SERVICE_STATE_CHANGED");
            broadcastIntent.putExtra("service_running", isChecked);
            sendBroadcast(broadcastIntent);
        });

        // Register the BroadcastReceiver to listen for service state changes
        IntentFilter filter = new IntentFilter("com.example.SERVICE_STATE_CHANGED");
        registerReceiver(serviceStateReceiver, filter);
    }

    @Override
    protected void onResume() {
        super.onResume();
        SharedPreferences sharedPreferences = getSharedPreferences("MyPreferences", MODE_PRIVATE);
        boolean switchState = sharedPreferences.getBoolean("service_running", false);
        switch1.setChecked(switchState);
    }

    // BroadcastReceiver to update the switch state based on broadcasts from other activities
    private final BroadcastReceiver serviceStateReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            if (intent != null && "com.example.SERVICE_STATE_CHANGED".equals(intent.getAction())) {
                boolean serviceRunning = intent.getBooleanExtra("service_running", false);
                switch1.setChecked(serviceRunning);
            }
        }
    };

    @Override
    protected void onDestroy() {
        super.onDestroy();
        unregisterReceiver(serviceStateReceiver);
    }
}



public class Activity2 extends AppCompatActivity {
    private SwitchCompat switch2;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity2);

        switch2 = findViewById(R.id.switch2);

        // Load saved switch state on startup
        SharedPreferences sharedPreferences = getSharedPreferences("MyPreferences", MODE_PRIVATE);
        boolean switchState = sharedPreferences.getBoolean("service_running", false);
        switch2.setChecked(switchState);

        // Start or stop the service based on switch state
        switch2.setOnCheckedChangeListener((buttonView, isChecked) -> {
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putBoolean("service_running", isChecked);
            editor.apply();

            if (isChecked) {
                startService(new Intent(Activity2.this, MyForegroundService.class));
            } else {
                stopService(new Intent(Activity2.this, MyForegroundService.class));
            }

            // Broadcast the new state so that Activity 1 can update its switch
            Intent broadcastIntent = new Intent("com.example.SERVICE_STATE_CHANGED");
            broadcastIntent.putExtra("service_running", isChecked);
            sendBroadcast(broadcastIntent);
        });

        // Register the BroadcastReceiver to listen for service state changes
        IntentFilter filter = new IntentFilter("com.example.SERVICE_STATE_CHANGED");
        registerReceiver(serviceStateReceiver, filter);
    }

    @Override
    protected void onResume() {
        super.onResume();
        SharedPreferences sharedPreferences = getSharedPreferences("MyPreferences", MODE_PRIVATE);
        boolean switchState = sharedPreferences.getBoolean("service_running", false);
        switch2.setChecked(switchState);
    }

    // BroadcastReceiver to update the switch state based on broadcasts from other activities
    private final BroadcastReceiver serviceStateReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            if (intent != null && "com.example.SERVICE_STATE_CHANGED".equals(intent.getAction())) {
                boolean serviceRunning = intent.getBooleanExtra("service_running", false);
                switch2.setChecked(serviceRunning);
            }
        }
    };

    @Override
    protected void onDestroy() {
        super.onDestroy();
        unregisterReceiver(serviceStateReceiver);
    }
}




